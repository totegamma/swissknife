name: Docker

on:
  push:
    branches: [ "master" ]
    tags: [ 'v*.*.*' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        arch:
          - ubuntu-24.04
          - ubuntu-24.04-arm

    runs-on: ${{ matrix.arch }}

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${{ matrix.arch }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  manifest:
    needs: build
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Log into registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifest list
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          IMAGE_TAG=${{ github.ref_name }}
          ARCH1=${IMAGE_TAG}-ubuntu-24.04
          ARCH2=${IMAGE_TAG}-ubuntu-24.04-arm

          docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${ARCH1} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${ARCH2}

          docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG}
